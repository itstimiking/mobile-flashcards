{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/timiking/Apps/mobile-flashcards/screens/NewCardView.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useDeckContext } from \"../context/deckContext\";\n\nvar NewCard = function NewCard(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useDeckContext = useDeckContext(),\n      addCardToDeckContext = _useDeckContext.addCardToDeckContext;\n\n  var id = route.params.id;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      question = _useState2[0],\n      setQuestion = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      answer = _useState4[0],\n      setAnswer = _useState4[1];\n\n  var handleQuestions = function handleQuestions(e) {\n    setQuestion(e);\n  };\n\n  var handleAnswer = function handleAnswer(e) {\n    setAnswer(e);\n  };\n\n  var addToQuestions = function addToQuestions() {\n    addCardToDeckContext(id, {\n      question: question,\n      answer: answer\n    });\n    Alert.alert(\"Success\", \"Question has been added to the \" + id + \" Deck\");\n    setQuestion(\"\");\n    setAnswer(\"\");\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: handleQuestions,\n    value: question,\n    placeholder: \"Enter question here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: handleAnswer,\n    value: answer,\n    placeholder: \"Answer here\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: addToQuestions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.btn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Add Card\")));\n};\n\nexport default NewCard;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  btn: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    padding: 16,\n    width: 200,\n    marginBottom: 20,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 20,\n    textAlign: \"center\"\n  },\n  input: {\n    width: \"80%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingLeft: 15,\n    paddingRight: 15,\n    textTransform: \"capitalize\",\n    marginBottom: 30\n  }\n});","map":{"version":3,"sources":["/home/timiking/Apps/mobile-flashcards/screens/NewCardView.js"],"names":["React","useState","useDeckContext","NewCard","route","navigation","addCardToDeckContext","id","params","question","setQuestion","answer","setAnswer","handleQuestions","e","handleAnswer","addToQuestions","Alert","alert","styles","container","input","btn","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","padding","width","marginBottom","display","borderRadius","textAlign","height","borderWidth","paddingLeft","paddingRight","textTransform"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;;;;AAEA,SAAQC,cAAR;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAwB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAEpC,wBAA+BH,cAAc,EAA7C;AAAA,MAAOI,oBAAP,mBAAOA,oBAAP;;AAGA,MAAOC,EAAP,GAAaH,KAAK,CAACI,MAAnB,CAAOD,EAAP;;AAEA,kBAA+BN,QAAQ,CAAC,EAAD,CAAvC;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAA2BT,QAAQ,CAAC,EAAD,CAAnC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAcC,SAAd;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAK;AACzBJ,IAAAA,WAAW,CAACI,CAAD,CAAX;AACH,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACD,CAAD,EAAK;AACtBF,IAAAA,SAAS,CAACE,CAAD,CAAT;AACH,GAFD;;AAIA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAI;AACvBV,IAAAA,oBAAoB,CAACC,EAAD,EAAI;AACpBE,MAAAA,QAAQ,EAARA,QADoB;AAEpBE,MAAAA,MAAM,EAANA;AAFoB,KAAJ,CAApB;AAIAM,IAAAA,KAAK,CAACC,KAAN,CAAY,SAAZ,sCAAyDX,EAAzD;AACAG,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GARD;;AAUA,SAEQ,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAED,MAAM,CAACE,KADlB;AAEI,IAAA,YAAY,EAAER,eAFlB;AAGI,IAAA,KAAK,EAAEJ,QAHX;AAII,IAAA,WAAW,EAAC,qBAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EASI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEU,MAAM,CAACE,KADlB;AAEI,IAAA,YAAY,EAAEN,YAFlB;AAGI,IAAA,KAAK,EAAEJ,MAHX;AAII,IAAA,WAAW,EAAC,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAeI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAEK,cADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACG,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAfJ,CAFR;AAwBH,CApDD;;AAsDA,eAAenB,OAAf;AAIA,IAAMgB,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADkB;AAO7BN,EAAAA,GAAG,EAAC;AACAI,IAAAA,eAAe,EAAC,OADhB;AAEAG,IAAAA,KAAK,EAAC,OAFN;AAGAC,IAAAA,OAAO,EAAE,EAHT;AAIAC,IAAAA,KAAK,EAAE,GAJP;AAKAC,IAAAA,YAAY,EAAC,EALb;AAMAC,IAAAA,OAAO,EAAC,MANR;AAOAN,IAAAA,UAAU,EAAC,QAPX;AAQAC,IAAAA,cAAc,EAAC,QARf;AASAM,IAAAA,YAAY,EAAC,EATb;AAUAC,IAAAA,SAAS,EAAC;AAVV,GAPyB;AAmB7Bd,EAAAA,KAAK,EAAC;AACFU,IAAAA,KAAK,EAAC,KADJ;AAEFK,IAAAA,MAAM,EAAC,EAFL;AAGFC,IAAAA,WAAW,EAAC,CAHV;AAIFH,IAAAA,YAAY,EAAC,EAJX;AAKFI,IAAAA,WAAW,EAAC,EALV;AAMFC,IAAAA,YAAY,EAAC,EANX;AAOFC,IAAAA,aAAa,EAAE,YAPb;AAQFR,IAAAA,YAAY,EAAC;AARX;AAnBuB,CAAlB,CAAf","sourcesContent":["import React,{useState} from 'react';\nimport { Text, KeyboardAvoidingView, TextInput, StyleSheet, TouchableOpacity, Alert } from 'react-native';\nimport {useDeckContext} from '../context/deckContext';    \n\n\nconst NewCard = ({route,navigation}) => {\n\n    const {addCardToDeckContext} = useDeckContext();\n\n\n    const {id} = route.params;\n\n    const [question,setQuestion] = useState(\"\");\n    const [answer,setAnswer] = useState(\"\");\n\n    const handleQuestions = (e)=>{\n        setQuestion(e)\n    }\n\n    const handleAnswer = (e)=>{\n        setAnswer(e)\n    }\n\n    const addToQuestions = ()=>{\n        addCardToDeckContext(id,{\n            question,\n            answer\n        })\n        Alert.alert(\"Success\", `Question has been added to the ${id} Deck`);\n        setQuestion(\"\");\n        setAnswer(\"\");\n    }\n\n    return (\n\n            <KeyboardAvoidingView style={styles.container}>\n                \n                <TextInput\n                    style={styles.input}\n                    onChangeText={handleQuestions}\n                    value={question}\n                    placeholder=\"Enter question here\"\n                />\n\n                <TextInput\n                    style={styles.input}\n                    onChangeText={handleAnswer}\n                    value={answer}\n                    placeholder=\"Answer here\"\n                />\n                <TouchableOpacity\n                    onPress={addToQuestions}\n                >\n                    <Text style={styles.btn}>Add Card</Text>\n                </TouchableOpacity>\n            </KeyboardAvoidingView>\n    )\n}\n\nexport default NewCard;\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    btn:{\n        backgroundColor:\"green\",\n        color:\"white\",\n        padding: 16,\n        width: 200,\n        marginBottom:20,\n        display:\"flex\",\n        alignItems:\"center\",\n        justifyContent:\"center\",\n        borderRadius:20,\n        textAlign:\"center\"\n    },\n    input:{\n        width:\"80%\",\n        height:40,\n        borderWidth:1,\n        borderRadius:10,\n        paddingLeft:15,\n        paddingRight:15,\n        textTransform: \"capitalize\",\n        marginBottom:30\n    }\n});"]},"metadata":{},"sourceType":"module"}
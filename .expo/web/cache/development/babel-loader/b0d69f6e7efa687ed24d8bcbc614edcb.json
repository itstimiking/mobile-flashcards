{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/timiking/Apps/mobile-flashcards/screens/DeckListView.js\";\n\nimport React, { useEffect, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useDeckContext } from \"../context/deckContext\";\n\nvar DeckListView = function DeckListView(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useDeckContext = useDeckContext(),\n      decks = _useDeckContext.decks;\n\n  var decksArray = Object.entries(decks);\n  var fadeAnim = useRef(new Animated.Value(0)).current;\n  useEffect(function () {\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: true\n    }).start();\n  }, [fadeAnim]);\n\n  var goToDeck = function goToDeck(deck) {\n    navigation.navigate(\"deck\", {\n      screen: \"Deck\",\n      params: {\n        id: deck[0]\n      }\n    });\n  };\n\n  var Item = function Item(_ref2) {\n    var deck = _ref2.deck;\n    return React.createElement(TouchableOpacity, {\n      style: styles.touch,\n      onPress: function onPress() {\n        return goToDeck(deck);\n      },\n      key: deck[0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, React.createElement(Animated.Text, {\n      style: [styles.deck, {\n        opacity: fadeAnim\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, deck[1].title));\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    return React.createElement(Item, {\n      deck: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: decksArray,\n    renderItem: renderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item[0];\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default DeckListView;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    paddingHorizontal: 20,\n    paddingTop: 30\n  },\n  deck: {\n    height: 50,\n    width: \"100%\",\n    paddingHorizontal: 20,\n    paddingVertical: 10\n  },\n  touch: {\n    borderBottomWidth: 1,\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["/home/timiking/Apps/mobile-flashcards/screens/DeckListView.js"],"names":["React","useEffect","useRef","TouchableOpacity","useDeckContext","DeckListView","navigation","decks","decksArray","Object","entries","fadeAnim","Animated","Value","current","timing","toValue","duration","useNativeDriver","start","goToDeck","deck","navigate","screen","params","id","Item","styles","touch","opacity","title","renderItem","item","container","StyleSheet","create","flex","backgroundColor","paddingHorizontal","paddingTop","height","width","paddingVertical","borderBottomWidth","marginBottom"],"mappings":"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","sourcesContent":["import React,{useEffect, useRef} from 'react';\nimport { Text, View, StyleSheet, FlatList, Animated, Button} from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport {useDeckContext} from '../context/deckContext';    \n\n\nconst DeckListView = ({navigation}) => {\n\n    const {decks} = useDeckContext();\n    const decksArray = Object.entries(decks);\n\n    const fadeAnim = useRef(new Animated.Value(0)).current;\n\n    useEffect(() => {\n        Animated.timing(\n          fadeAnim,\n          {\n            toValue: 1,\n            duration: 500,\n            useNativeDriver:true\n          }\n        ).start();\n    }, [fadeAnim])\n\n    const goToDeck = (deck) =>{\n        navigation.navigate(\"deck\",{screen:\"Deck\",params:{id:deck[0]}})\n    }\n\n    const Item = ({deck}) => {\n        return (\n            <TouchableOpacity\n                style={styles.touch}\n                onPress={()=>goToDeck(deck)}\n                key={deck[0]}\n            > \n                <Animated.Text\n                    style={[styles.deck, {opacity: fadeAnim}]}\n                >\n                    {deck[1].title} \n                </Animated.Text>\n    \n            </TouchableOpacity>\n        )\n    }\n\n    const renderItem = ({item}) => {\n        return <Item deck={item} />\n    }\n\n    return (\n        <View style={styles.container}>\n        \n            <FlatList \n                data={decksArray}\n                renderItem={renderItem}\n                keyExtractor={item=>item[0]}\n            />\n\n        </View>\n    );\n}\n\n\n\nexport default DeckListView;\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        paddingHorizontal:20,\n        paddingTop:30\n    },\n    deck:{\n        height: 50,\n        width: \"100%\",\n        paddingHorizontal:20,\n        paddingVertical:10,\n    },\n    touch:{\n        borderBottomWidth: 1,\n        marginBottom:20,\n    }\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/timiking/Apps/mobile-flashcards/screens/DeckView.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useDeckContext } from \"../context/deckContext\";\n\nvar DeckView = function DeckView(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var id = route.params.id;\n\n  var _useDeckContext = useDeckContext(),\n      decks = _useDeckContext.decks;\n\n  var deck = decks[id];\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, (deck == null ? void 0 : deck.title) && React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.deckName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 25\n    }\n  }, deck.title, \" \"), React.createElement(Text, {\n    style: styles.deckDetails,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 25\n    }\n  }, deck.questions.length + \" card\" + (!(deck.questions.length === 1) ? \"s\" : \"\") + \".\")), React.createElement(View, {\n    style: styles.btnView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"newcard\", {\n        id: deck.title\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.btnCard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, \"Add Card To Deck\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"quize\", deck);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.btnQuize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  }, \"Start Quize\")))));\n};\n\nexport default DeckView;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: \"center\"\n  },\n  deckName: {\n    fontSize: 20,\n    fontWeight: \"800\"\n  },\n  deckDetails: {\n    color: \"#999\"\n  },\n  btnView: {\n    marginVertical: 40,\n    padding: 10,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  btnQuize: {\n    backgroundColor: \"green\",\n    color: \"white\",\n    padding: 16,\n    width: 200,\n    marginBottom: 20,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  btnCard: {\n    backgroundColor: \"gray\",\n    color: \"white\",\n    padding: 16,\n    width: 200,\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["/home/timiking/Apps/mobile-flashcards/screens/DeckView.js"],"names":["React","useState","useEffect","TouchableOpacity","useDeckContext","DeckView","route","navigation","id","params","decks","deck","styles","container","title","alignItems","deckName","deckDetails","questions","length","btnView","navigate","btnCard","btnQuize","StyleSheet","create","flex","backgroundColor","justifyContent","fontSize","fontWeight","color","marginVertical","padding","width","marginBottom","display"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { Text, View, StyleSheet} from 'react-native';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useDeckContext } from '../context/deckContext';\n\nconst DeckView = ({route,navigation}) => {\n\n    const {id} = route.params;\n    const {decks} = useDeckContext();\n\n    const deck = decks[id];\n\n    return (\n        <View style={styles.container}>\n            {deck?.title && (\n                <View>\n                    <View style={{alignItems:\"center\"}}>\n                        <Text style={styles.deckName}>{ deck.title } </Text>\n                        <Text style={styles.deckDetails}> \n                            { `${deck.questions.length} card${!(deck.questions.length === 1) ? \"s\" : \"\"}.` }\n                        </Text>\n                    </View>\n\n                    <View style={styles.btnView}>\n                        <TouchableOpacity \n                            onPress={()=>navigation.navigate(\"newcard\",{id:deck.title})}\n                        >\n                            <Text style={styles.btnCard}>Add Card To Deck</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                            onPress={()=>navigation.navigate(\"quize\", deck)}\n                        >\n                            <Text style={styles.btnQuize}>Start Quize</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n            )}\n        </View>\n    )\n}\n\nexport default DeckView;\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent:\"center\"\n    },\n    deckName:{\n        fontSize: 20,\n        fontWeight: \"800\",\n    },\n    deckDetails:{\n        color:\"#999\"\n    },\n    btnView:{\n        marginVertical:40,\n        padding: 10,\n        width: \"100%\",\n        justifyContent:\"space-between\",\n        alignItems:\"center\"\n    },\n    btnQuize:{\n        backgroundColor:\"green\",\n        color:\"white\",\n        padding: 16,\n        width: 200,\n        marginBottom:20,\n        display:\"flex\",\n        alignItems:\"center\",\n        justifyContent:\"center\"\n    },\n    btnCard:{\n        backgroundColor: \"gray\",\n        color:\"white\",\n        padding: 16,\n        width: 200,\n        marginBottom:20\n    }\n});"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from \"react\";\nimport * as Permissions from 'expo-permissions';\nimport * as Notifications from 'expo-notifications';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar NOTIFICATION_KEY_MOBILE_FLASHCARD = \"myMobileFlashcardNotificationKey:notifications\";\nexport var initialState = {\n  React: {\n    title: \"React\",\n    questions: [{\n      question: \"What is React?\",\n      answer: \"A library for managing user interfaces\"\n    }, {\n      question: \"Where do you make Ajax requests in React?\",\n      answer: \"The componentDidMount lifecycle event\"\n    }]\n  },\n  JavaScript: {\n    title: \"JavaScript\",\n    questions: [{\n      question: \"What is a closure?\",\n      answer: \"The combination of a function and the lexical environment within which that function was declared.\"\n    }]\n  }\n};\nexport var clearLocalNotifications = function clearLocalNotifications() {\n  return AsyncStorage.removeItem(NOTIFICATION_KEY_MOBILE_FLASHCARD).then(Notifications.cancelAllScheduledNotificationsAsync);\n};\nexport var createNotification = function createNotification() {\n  return {\n    title: \"Mobile flashcards app\",\n    body: \" Dont forget to practice for your upcomming test today\",\n    ios: {\n      sound: true\n    },\n    android: {\n      sound: true,\n      priority: \"high\",\n      sticky: false,\n      vibrate: true\n    }\n  };\n};\nexport var setLocalNotification = function setLocalNotification() {\n  AsyncStorage.getItem(NOTIFICATION_KEY_MOBILE_FLASHCARD).then(JSON.parse).then(function (data) {\n    if (data === null) {\n      Permissions.askAsync(Permissions.NOTIFICATIONS).then(function (status) {\n        if (status === \"granted\") {\n          Notifications.cancelAllScheduledNotificationsAsync();\n          var tomorrow = new Date();\n          tomorrow.setDate(tomorrow.getDate() + 1);\n          tomorrow.setHours(7);\n          tomorrow.setMinutes(0);\n          Notifications.scheduleLocalNotificationsAsync(createNotification(), {\n            time: tomorrow,\n            repeat: \"day\"\n          });\n          AsyncStorage.setItem(NOTIFICATION_KEY_MOBILE_FLASHCARD, JSON.stringify(true));\n        }\n      });\n    }\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/timiking/Apps/mobile-flashcards/utils/helpers.js"],"names":["React","Permissions","Notifications","AsyncStorage","NOTIFICATION_KEY_MOBILE_FLASHCARD","initialState","title","questions","question","answer","JavaScript","clearLocalNotifications","removeItem","then","cancelAllScheduledNotificationsAsync","createNotification","body","ios","sound","android","priority","sticky","vibrate","setLocalNotification","getItem","JSON","parse","data","askAsync","NOTIFICATIONS","status","tomorrow","Date","setDate","getDate","setHours","setMinutes","scheduleLocalNotificationsAsync","time","repeat","setItem","stringify","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,IAAMC,iCAAiC,GACnC,gDADJ;AAGA,OAAO,IAAMC,YAAY,GAAG;AACxBL,EAAAA,KAAK,EAAE;AACHM,IAAAA,KAAK,EAAE,OADJ;AAEHC,IAAAA,SAAS,EAAE,CACP;AACIC,MAAAA,QAAQ,EAAE,gBADd;AAEIC,MAAAA,MAAM,EAAE;AAFZ,KADO,EAKP;AACID,MAAAA,QAAQ,EAAE,2CADd;AAEIC,MAAAA,MAAM,EAAE;AAFZ,KALO;AAFR,GADiB;AAcxBC,EAAAA,UAAU,EAAE;AACRJ,IAAAA,KAAK,EAAE,YADC;AAERC,IAAAA,SAAS,EAAE,CACP;AACIC,MAAAA,QAAQ,EAAE,oBADd;AAEIC,MAAAA,MAAM,EAAE;AAFZ,KADO;AAFH;AAdY,CAArB;AAyBP,OAAO,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AACzC,SAAOR,YAAY,CAACS,UAAb,CAAwBR,iCAAxB,EAA2DS,IAA3D,CACHX,aAAa,CAACY,oCADX,CAAP;AAGH,CAJM;AAMP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AACpC,SAAO;AACHT,IAAAA,KAAK,EAAE,uBADJ;AAEHU,IAAAA,IAAI,EAAE,wDAFH;AAGHC,IAAAA,GAAG,EAAE;AACDC,MAAAA,KAAK,EAAE;AADN,KAHF;AAMHC,IAAAA,OAAO,EAAE;AACLD,MAAAA,KAAK,EAAE,IADF;AAELE,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,MAAM,EAAE,KAHH;AAILC,MAAAA,OAAO,EAAE;AAJJ;AANN,GAAP;AAaH,CAdM;AAgBP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACtCpB,EAAAA,YAAY,CAACqB,OAAb,CAAqBpB,iCAArB,EACKS,IADL,CACUY,IAAI,CAACC,KADf,EAEKb,IAFL,CAEU,UAACc,IAAD,EAAU;AACZ,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACf1B,MAAAA,WAAW,CAAC2B,QAAZ,CAAqB3B,WAAW,CAAC4B,aAAjC,EAAgDhB,IAAhD,CACI,UAACiB,MAAD,EAAY;AACR,YAAIA,MAAM,KAAK,SAAf,EAA0B;AACtB5B,UAAAA,aAAa,CAACY,oCAAd;AAEA,cAAIiB,QAAQ,GAAG,IAAIC,IAAJ,EAAf;AACAD,UAAAA,QAAQ,CAACE,OAAT,CAAiBF,QAAQ,CAACG,OAAT,KAAqB,CAAtC;AACAH,UAAAA,QAAQ,CAACI,QAAT,CAAkB,CAAlB;AACAJ,UAAAA,QAAQ,CAACK,UAAT,CAAoB,CAApB;AAEAlC,UAAAA,aAAa,CAACmC,+BAAd,CACItB,kBAAkB,EADtB,EAEI;AACIuB,YAAAA,IAAI,EAAEP,QADV;AAEIQ,YAAAA,MAAM,EAAE;AAFZ,WAFJ;AAQApC,UAAAA,YAAY,CAACqC,OAAb,CACIpC,iCADJ,EAEIqB,IAAI,CAACgB,SAAL,CAAe,IAAf,CAFJ;AAIH;AACJ,OAvBL;AAyBH;AACJ,GA9BL,EA+BKC,KA/BL,CA+BW,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GA/Bd;AAgCH,CAjCM","sourcesContent":["import React from \"react\";\nimport * as Permissions from 'expo-permissions';\nimport * as Notifications from 'expo-notifications';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\n\nconst NOTIFICATION_KEY_MOBILE_FLASHCARD =\n    \"myMobileFlashcardNotificationKey:notifications\";\n\nexport const initialState = {\n    React: {\n        title: \"React\",\n        questions: [\n            {\n                question: \"What is React?\",\n                answer: \"A library for managing user interfaces\",\n            },\n            {\n                question: \"Where do you make Ajax requests in React?\",\n                answer: \"The componentDidMount lifecycle event\",\n            },\n        ],\n    },\n    JavaScript: {\n        title: \"JavaScript\",\n        questions: [\n            {\n                question: \"What is a closure?\",\n                answer: \"The combination of a function and the lexical environment within which that function was declared.\",\n            },\n        ],\n    },\n};\n\nexport const clearLocalNotifications = () => {\n    return AsyncStorage.removeItem(NOTIFICATION_KEY_MOBILE_FLASHCARD).then(\n        Notifications.cancelAllScheduledNotificationsAsync\n    );\n};\n\nexport const createNotification = () => {\n    return {\n        title: \"Mobile flashcards app\",\n        body: \" Dont forget to practice for your upcomming test today\",\n        ios: {\n            sound: true,\n        },\n        android: {\n            sound: true,\n            priority: \"high\",\n            sticky: false,\n            vibrate: true,\n        },\n    };\n};\n\nexport const setLocalNotification = () => {\n    AsyncStorage.getItem(NOTIFICATION_KEY_MOBILE_FLASHCARD)\n        .then(JSON.parse)\n        .then((data) => {\n            if (data === null) {\n                Permissions.askAsync(Permissions.NOTIFICATIONS).then(\n                    (status) => {\n                        if (status === \"granted\") {\n                            Notifications.cancelAllScheduledNotificationsAsync();\n\n                            let tomorrow = new Date();\n                            tomorrow.setDate(tomorrow.getDate() + 1);\n                            tomorrow.setHours(7);\n                            tomorrow.setMinutes(0);\n\n                            Notifications.scheduleLocalNotificationsAsync(\n                                createNotification(),\n                                {\n                                    time: tomorrow,\n                                    repeat: \"day\",\n                                }\n                            );\n\n                            AsyncStorage.setItem(\n                                NOTIFICATION_KEY_MOBILE_FLASHCARD,\n                                JSON.stringify(true)\n                            );\n                        }\n                    }\n                );\n            }\n        })\n        .catch(err=>console.log(err))\n};\n"]},"metadata":{},"sourceType":"module"}
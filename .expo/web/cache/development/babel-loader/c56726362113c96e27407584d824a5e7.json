{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/digitechub/apps/mobile-flashcards/context/deckContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, createContext, useContext } from 'react';\nimport { initialState, getDecks, getDeck, saveDeckTitle, addCardToDeck } from \"../utils/helpers\";\nexport var DeckContext = createContext();\nexport var useDeckContext = function useDeckContext() {\n  return useContext(DeckContext);\n};\nexport var DeckContextProvider = function DeckContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      decks = _useState2[0],\n      setDecks = _useState2[1];\n\n  function getDeckContext(title) {\n    return decks[title];\n  }\n\n  function saveDeckTitleContext(title) {\n    console.log(\"::::::::: Deck Added in Context :::::::\");\n    setDecks(_objectSpread(_objectSpread({}, decks), _defineProperty({}, title, {})));\n    return decks;\n  }\n\n  function addCardToDeckContext(title) {\n    return decks[title];\n  }\n\n  return React.createElement(DeckContext.Provider, {\n    value: {\n      decks: decks,\n      getDeckContext: getDeckContext,\n      saveDeckTitleContext: saveDeckTitleContext,\n      addCardToDeckContext: addCardToDeckContext\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/digitechub/apps/mobile-flashcards/context/deckContext.js"],"names":["React","useState","createContext","useContext","initialState","getDecks","getDeck","saveDeckTitle","addCardToDeck","DeckContext","useDeckContext","DeckContextProvider","children","decks","setDecks","getDeckContext","title","saveDeckTitleContext","console","log","addCardToDeckContext"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,QAA2D,OAA3D;AACA,SAAQC,YAAR,EAAsBC,QAAtB,EAAgCC,OAAhC,EAAyCC,aAAzC,EAAwDC,aAAxD;AAEA,OAAO,IAAMC,WAAW,GAAGP,aAAa,EAAjC;AAEP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMP,UAAU,CAACM,WAAD,CAAhB;AAAA,CAAvB;AAEP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAE/C,kBAA0BX,QAAQ,CAACG,YAAD,CAAlC;AAAA;AAAA,MAAOS,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC1B,WAAOH,KAAK,CAACG,KAAD,CAAZ;AACH;;AAED,WAASC,oBAAT,CAA8BD,KAA9B,EAAoC;AAChCE,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACAL,IAAAA,QAAQ,iCAAKD,KAAL,uBAAiBG,KAAjB,EAAwB,EAAxB,GAAR;AACA,WAAOH,KAAP;AACH;;AAED,WAASO,oBAAT,CAA8BJ,KAA9B,EAAoC;AAChC,WAAOH,KAAK,CAACG,KAAD,CAAZ;AACH;;AAED,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHH,MAAAA,KAAK,EAALA,KADG;AAEHE,MAAAA,cAAc,EAAdA,cAFG;AAGHE,MAAAA,oBAAoB,EAApBA,oBAHG;AAIHG,MAAAA,oBAAoB,EAApBA;AAJG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKR,QARL,CADJ;AAYH,CA9BM","sourcesContent":["import React, { useState, createContext, useContext } from 'react';\nimport {initialState, getDecks, getDeck, saveDeckTitle, addCardToDeck} from '../utils/helpers';\n\nexport const DeckContext = createContext();\n\nexport const useDeckContext = () => useContext(DeckContext);\n  \nexport const DeckContextProvider = ({children}) => {\n\n    const [decks, setDecks] = useState(initialState)\n\n    function getDeckContext(title){\n        return decks[title]\n    }\n\n    function saveDeckTitleContext(title){\n        console.log(\"::::::::: Deck Added in Context :::::::\")\n        setDecks({...decks, ...{[title]:{}}})\n        return decks;\n    }\n\n    function addCardToDeckContext(title){\n        return decks[title]\n    }\n \n    return (\n        <DeckContext.Provider \n            value={{\n                decks,\n                getDeckContext,\n                saveDeckTitleContext,\n                addCardToDeckContext\n            }}\n        >\n            {children}\n        </DeckContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}
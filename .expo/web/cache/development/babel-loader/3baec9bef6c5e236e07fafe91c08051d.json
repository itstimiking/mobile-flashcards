{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar MOBILE_FLASHCARDS_DECK_KEY = \"udacityMobileFitnessAppByTimi\";\nexport var initialState = {\n  React: {\n    title: 'React',\n    questions: [{\n      question: 'What is React?',\n      answer: 'A library for managing user interfaces'\n    }, {\n      question: 'Where do you make Ajax requests in React?',\n      answer: 'The componentDidMount lifecycle event'\n    }]\n  },\n  JavaScript: {\n    title: 'JavaScript',\n    questions: [{\n      question: 'What is a closure?',\n      answer: 'The combination of a function and the lexical environment within which that function was declared.'\n    }]\n  }\n};\nexport var getDecks = function getDecks() {\n  var data;\n  return _regeneratorRuntime.async(function getDecks$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(MOBILE_FLASHCARDS_DECK_KEY));\n\n        case 2:\n          data = _context.sent;\n\n          if (!(data !== null)) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", JSON.parse(data));\n\n        case 7:\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(MOBILE_FLASHCARDS_DECK_KEY, JSON.stringify(initialState)));\n\n        case 9:\n          return _context.abrupt(\"return\", initialState);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getDeck = function getDeck(id) {\n  var deck = {};\n  AsyncStorage.mergeItem(packageKey, deck).then(function (data) {\n    return JSON.parse(data);\n  }).then(function (res) {\n    return res[id], _readOnlyError(\"deck\");\n  }).catch(function (err) {\n    return alert(err);\n  });\n  return deck;\n};\nexport var saveDeckTitle = function saveDeckTitle(title) {\n  AsyncStorage.mergeItem(MOBILE_FLASHCARDS_DECK_KEY, JSON.stringify(_defineProperty({}, title, {}))).then(function (data) {\n    return console.log(data);\n  }).catch(function (err) {\n    return alert(err);\n  });\n  console.log(title);\n};\nexport var addCardToDeck = function addCardToDeck(title, card) {\n  AsyncStorage.getItem(packageKey, deck).then(function (data) {\n    return JSON.parse(data);\n  }).then(function (res) {\n    return deck = res[id];\n  }).catch(function (err) {\n    return alert(err);\n  });\n};","map":{"version":3,"sources":["/home/digitechub/apps/mobile-flashcards/utils/helpers.js"],"names":["React","AsyncStorage","MOBILE_FLASHCARDS_DECK_KEY","initialState","title","questions","question","answer","JavaScript","getDecks","getItem","data","JSON","parse","setItem","stringify","getDeck","id","deck","mergeItem","packageKey","then","res","catch","err","alert","saveDeckTitle","console","log","addCardToDeck","card"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,IAAMC,0BAA0B,GAAG,+BAAnC;AAEA,OAAO,IAAMC,YAAY,GAAG;AACxBH,EAAAA,KAAK,EAAE;AACLI,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,SAAS,EAAE,CACT;AACEC,MAAAA,QAAQ,EAAE,gBADZ;AAEEC,MAAAA,MAAM,EAAE;AAFV,KADS,EAKT;AACED,MAAAA,QAAQ,EAAE,2CADZ;AAEEC,MAAAA,MAAM,EAAE;AAFV,KALS;AAFN,GADiB;AAcxBC,EAAAA,UAAU,EAAE;AACVJ,IAAAA,KAAK,EAAE,YADG;AAEVC,IAAAA,SAAS,EAAE,CACT;AACEC,MAAAA,QAAQ,EAAE,oBADZ;AAEEC,MAAAA,MAAM,EAAE;AAFV,KADS;AAFD;AAdY,CAArB;AA2BP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEDR,YAAY,CAACS,OAAb,CAAqBR,0BAArB,CAFC;;AAAA;AAEdS,UAAAA,IAFc;;AAAA,gBAIjBA,IAAI,KAAK,IAJQ;AAAA;AAAA;AAAA;;AAAA,2CAKTC,IAAI,CAACC,KAAL,CAAWF,IAAX,CALS;;AAAA;AAAA;AAAA,2CAOVV,YAAY,CAACa,OAAb,CAAqBZ,0BAArB,EAAiDU,IAAI,CAACG,SAAL,CAAeZ,YAAf,CAAjD,CAPU;;AAAA;AAAA,2CAQTA,YARS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAYP,OAAO,IAAMa,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAQ;AAE3B,MAAMC,IAAI,GAAG,EAAb;AAEAjB,EAAAA,YAAY,CAACkB,SAAb,CAAuBC,UAAvB,EAAmCF,IAAnC,EACCG,IADD,CACM,UAAAV,IAAI;AAAA,WAAIC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAJ;AAAA,GADV,EAECU,IAFD,CAEM,UAAAC,GAAG;AAAA,WAAUA,GAAG,CAACL,EAAD,CAAb;AAAA,GAFT,EAGCM,KAHD,CAGO,UAAAC,GAAG;AAAA,WAAEC,KAAK,CAACD,GAAD,CAAP;AAAA,GAHV;AAKA,SAAON,IAAP;AACH,CAVM;AAaP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACtB,KAAD,EAAW;AAEpCH,EAAAA,YAAY,CAACkB,SAAb,CAAuBjB,0BAAvB,EAAmDU,IAAI,CAACG,SAAL,qBAAiBX,KAAjB,EAAwB,EAAxB,EAAnD,EACCiB,IADD,CACM,UAAAV,IAAI;AAAA,WAAIgB,OAAO,CAACC,GAAR,CAAYjB,IAAZ,CAAJ;AAAA,GADV,EAECY,KAFD,CAEO,UAAAC,GAAG;AAAA,WAAEC,KAAK,CAACD,GAAD,CAAP;AAAA,GAFV;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAYxB,KAAZ;AACH,CAPM;AAgBN,OAAO,IAAMyB,aAAa,GAAG,SAAhBA,aAAgB,CAACzB,KAAD,EAAO0B,IAAP,EAAgB;AAE1C7B,EAAAA,YAAY,CAACS,OAAb,CAAqBU,UAArB,EAAiCF,IAAjC,EACCG,IADD,CACM,UAAAV,IAAI;AAAA,WAAIC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAJ;AAAA,GADV,EAECU,IAFD,CAEM,UAAAC,GAAG;AAAA,WAAGJ,IAAI,GAAGI,GAAG,CAACL,EAAD,CAAb;AAAA,GAFT,EAGCM,KAHD,CAGO,UAAAC,GAAG;AAAA,WAAEC,KAAK,CAACD,GAAD,CAAP;AAAA,GAHV;AAIH,CANO","sourcesContent":["import React from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst MOBILE_FLASHCARDS_DECK_KEY = \"udacityMobileFitnessAppByTimi\";\n\nexport const initialState = {\n    React: {\n      title: 'React',\n      questions: [\n        {\n          question: 'What is React?',\n          answer: 'A library for managing user interfaces'\n        },\n        {\n          question: 'Where do you make Ajax requests in React?',\n          answer: 'The componentDidMount lifecycle event'\n        }\n      ]\n    },\n    JavaScript: {\n      title: 'JavaScript',\n      questions: [\n        {\n          question: 'What is a closure?',\n          answer: 'The combination of a function and the lexical environment within which that function was declared.'\n        }\n      ]\n    }\n  }\n\n\n\nexport const getDecks = async () => {\n\n    const data = await AsyncStorage.getItem(MOBILE_FLASHCARDS_DECK_KEY)\n    \n    if(data !== null){\n        return JSON.parse(data);\n    }else{\n        await AsyncStorage.setItem(MOBILE_FLASHCARDS_DECK_KEY, JSON.stringify(initialState))\n        return initialState;\n    }\n}\n\nexport const getDeck = (id) => {\n\n    const deck = {}\n\n    AsyncStorage.mergeItem(packageKey, deck)\n    .then(data => JSON.parse(data))\n    .then(res=> deck = res[id])\n    .catch(err=>alert(err))\n\n    return deck\n}\n\n\nexport const saveDeckTitle = (title) => {\n\n    AsyncStorage.mergeItem(MOBILE_FLASHCARDS_DECK_KEY, JSON.stringify({[title]:{}}) )\n    .then(data => console.log(data))\n    .catch(err=>alert(err))\n\n    console.log(title)\n}\n\n\n/*** addCardToDeck: take in two arguments, title and card, \n * and will add the card to the list of \n * questions for the deck with the associated title.\n * \n */\n\n export const addCardToDeck = (title,card) => {\n\n    AsyncStorage.getItem(packageKey, deck)\n    .then(data => JSON.parse(data))\n    .then(res=> deck = res[id])\n    .catch(err=>alert(err))\n}"]},"metadata":{},"sourceType":"module"}
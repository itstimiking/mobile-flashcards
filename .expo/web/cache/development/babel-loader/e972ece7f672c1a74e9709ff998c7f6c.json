{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/timiking/Apps/mobile-flashcards/screens/NewDeck.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { useDeckContext } from \"../context/deckContext\";\n\nvar NewDeck = function NewDeck(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      deck = _useState2[0],\n      setDeck = _useState2[1];\n\n  var _useDeckContext = useDeckContext(),\n      saveDeckTitleContext = _useDeckContext.saveDeckTitleContext;\n\n  var handleChange = function handleChange(e) {\n    setDeck(e);\n  };\n\n  var addDeck = function addDeck() {\n    if (deck.length > 0) {\n      saveDeckTitleContext(_defineProperty({}, deck[0].toUpperCase() + deck.substr(1, deck.length - 1), {\n        title: deck[0].toUpperCase() + deck.substr(1, deck.length - 1),\n        questions: []\n      }));\n      setDeck(\"\");\n      Alert.alert(\"Success\", \"Deck added successfully\");\n      navigation.navigate(\"deck\", {\n        screen: \"Deck\",\n        params: {\n          id: deck\n        }\n      });\n    } else {\n      Alert.alert(\"Warning\", \"Please insert a deck name first\");\n    }\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"What is the title of your new deck?\"), React.createElement(TextInput, {\n    style: styles.input,\n    onChangeText: handleChange,\n    value: deck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: addDeck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.btn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Create Deck\")));\n};\n\nexport default NewDeck;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    fontSize: 20,\n    marginBottom: 40\n  },\n  input: {\n    width: \"80%\",\n    height: 40,\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingLeft: 15,\n    paddingRight: 15,\n    textTransform: \"capitalize\"\n  },\n  btn: {\n    color: \"white\",\n    padding: 10,\n    backgroundColor: \"green\",\n    margin: 10\n  }\n});","map":{"version":3,"sources":["/home/timiking/Apps/mobile-flashcards/screens/NewDeck.js"],"names":["React","useState","useDeckContext","NewDeck","navigation","deck","setDeck","saveDeckTitleContext","handleChange","e","addDeck","length","toUpperCase","substr","title","questions","Alert","alert","navigate","screen","params","id","styles","container","text","input","btn","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","fontSize","marginBottom","width","height","borderWidth","borderRadius","paddingLeft","paddingRight","textTransform","color","padding","margin"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { \n    Text,TextInput, \n    StyleSheet, \n    TouchableOpacity, \n    Alert, \n    KeyboardAvoidingView\n} from 'react-native';\nimport {useDeckContext} from '../context/deckContext';    \n\nconst NewDeck = ({navigation}) => {\n    const [deck, setDeck] = useState(\"\");\n    const {saveDeckTitleContext} = useDeckContext();\n\n    const handleChange = (e) =>{\n        setDeck(e)\n    }\n\n    const addDeck = () => {\n        if(deck.length > 0){\n            saveDeckTitleContext({\n                [deck[0].toUpperCase() + deck.substr(1,deck.length - 1)]:{\n                    title:deck[0].toUpperCase() + deck.substr(1,deck.length - 1), \n                    questions:[]\n                }\n            })\n            setDeck(\"\")\n            Alert.alert(\"Success\", \"Deck added successfully\")\n            navigation.navigate(\"deck\", {screen: \"Deck\", params:{id:deck}})\n        }else{\n            Alert.alert(\"Warning\",\"Please insert a deck name first\")\n        }\n    }\n\n    return (\n        <KeyboardAvoidingView style={styles.container}>\n            <Text style={styles.text}>What is the title of your new deck?</Text>\n            \n            <TextInput\n                style={styles.input}\n                onChangeText={handleChange}\n                value={deck}\n            />\n            <TouchableOpacity\n                onPress={addDeck}\n            >\n                <Text style={styles.btn}>Create Deck</Text>\n            </TouchableOpacity>\n        </KeyboardAvoidingView>\n    )\n}\n\nexport default NewDeck;\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    text:{\n        fontSize:20,\n        marginBottom:40\n    },\n    input:{\n        width:\"80%\",\n        height:40,\n        borderWidth:1,\n        borderRadius:10,\n        paddingLeft:15,\n        paddingRight:15,\n        textTransform: \"capitalize\"\n    },\n    btn:{\n        color:\"white\",\n        padding: 10,\n        backgroundColor:\"green\",\n        margin:10\n    }\n});"]},"metadata":{},"sourceType":"module"}
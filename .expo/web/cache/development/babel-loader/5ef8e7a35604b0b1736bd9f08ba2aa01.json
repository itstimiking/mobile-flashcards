{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/timiking/Apps/mobile-flashcards/context/deckContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState, createContext, useContext } from 'react';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { initialState } from \"../utils/helpers\";\nvar MOBILE_FLASHCARDS_DECK_KEY = \"udacityMobileFitnessAppByTimi\";\nexport var DeckContext = createContext();\nexport var useDeckContext = function useDeckContext() {\n  return useContext(DeckContext);\n};\nexport var DeckContextProvider = function DeckContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      decks = _useState2[0],\n      setDecks = _useState2[1];\n\n  useEffect(function () {\n    console.log(\"::::::::::: ASYNC SETITEM ::::::::::::\");\n\n    if (decks !== initialState) {\n      AsyncStorage.setItem(MOBILE_FLASHCARDS_DECK_KEY, JSON.stringify(decks));\n    }\n  }, [decks]);\n  useEffect(function () {\n    console.log(\"::::::::::: ASYNC STORAGE IS RUNNING ::::::::::::\");\n    AsyncStorage.getItem(MOBILE_FLASHCARDS_DECK_KEY).then(function (res) {\n      return JSON.parse(res);\n    }).then(function (data) {\n      console.log(data);\n\n      if (data === null) {\n        setDecks(initialState);\n      } else {\n        setDecks(data);\n      }\n    });\n  }, []);\n\n  function saveDeckTitleContext(deck) {\n    setDecks(_objectSpread(_objectSpread({}, decks), deck));\n  }\n\n  function addCardToDeckContext(title, question) {\n    setDecks(_objectSpread(_objectSpread({}, decks), {}, _defineProperty({}, title, _objectSpread(_objectSpread({}, decks[title]), {}, {\n      questions: [].concat(_toConsumableArray(decks[title].questions), [question])\n    }))));\n  }\n\n  return React.createElement(DeckContext.Provider, {\n    value: {\n      decks: decks,\n      saveDeckTitleContext: saveDeckTitleContext,\n      addCardToDeckContext: addCardToDeckContext\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/timiking/Apps/mobile-flashcards/context/deckContext.js"],"names":["React","useEffect","useState","createContext","useContext","AsyncStorage","initialState","MOBILE_FLASHCARDS_DECK_KEY","DeckContext","useDeckContext","DeckContextProvider","children","decks","setDecks","console","log","setItem","JSON","stringify","getItem","then","res","parse","data","saveDeckTitleContext","deck","addCardToDeckContext","title","question","questions"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAoCC,aAApC,EAAmDC,UAAnD,QAAqE,OAArE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAAQC,YAAR;AAEA,IAAMC,0BAA0B,GAAG,+BAAnC;AAEA,OAAO,IAAMC,WAAW,GAAGL,aAAa,EAAjC;AAEP,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAML,UAAU,CAACI,WAAD,CAAhB;AAAA,CAAvB;AAGP,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAE/C,kBAA0BT,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOU,KAAP;AAAA,MAAcC,QAAd;;AAEAZ,EAAAA,SAAS,CAAC,YAAI;AACVa,IAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;;AAEA,QAAGH,KAAK,KAAKN,YAAb,EAA0B;AACtBD,MAAAA,YAAY,CAACW,OAAb,CAAqBT,0BAArB,EAAiDU,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAjD;AACH;AACJ,GANQ,EAMP,CAACA,KAAD,CANO,CAAT;AAQAX,EAAAA,SAAS,CAAC,YAAI;AACVa,IAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ;AACAV,IAAAA,YAAY,CAACc,OAAb,CAAqBZ,0BAArB,EACCa,IADD,CACM,UAAAC,GAAG;AAAA,aAAEJ,IAAI,CAACK,KAAL,CAAWD,GAAX,CAAF;AAAA,KADT,EAECD,IAFD,CAEM,UAAAG,IAAI,EAAE;AACRT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;;AACA,UAAGA,IAAI,KAAK,IAAZ,EAAiB;AACbV,QAAAA,QAAQ,CAACP,YAAD,CAAR;AACH,OAFD,MAEK;AACDO,QAAAA,QAAQ,CAACU,IAAD,CAAR;AACH;AACJ,KATD;AAUH,GAZQ,EAYP,EAZO,CAAT;;AAcA,WAASC,oBAAT,CAA8BC,IAA9B,EAAmC;AAC/BZ,IAAAA,QAAQ,iCAAKD,KAAL,GAAea,IAAf,EAAR;AACH;;AAED,WAASC,oBAAT,CAA8BC,KAA9B,EAAoCC,QAApC,EAA6C;AACzCf,IAAAA,QAAQ,iCACDD,KADC,2BAEHe,KAFG,kCAGGf,KAAK,CAACe,KAAD,CAHR;AAIAE,MAAAA,SAAS,+BACFjB,KAAK,CAACe,KAAD,CAAL,CAAaE,SADX,IAELD,QAFK;AAJT,SAAR;AAUH;;AAED,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHhB,MAAAA,KAAK,EAALA,KADG;AAEHY,MAAAA,oBAAoB,EAApBA,oBAFG;AAGHE,MAAAA,oBAAoB,EAApBA;AAHG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKf,QAPL,CADJ;AAWH,CAtDM","sourcesContent":["import React, { useEffect,useState, createContext, useContext } from 'react';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport {initialState} from '../utils/helpers';\n\nconst MOBILE_FLASHCARDS_DECK_KEY = \"udacityMobileFitnessAppByTimi\";\n\nexport const DeckContext = createContext();\n\nexport const useDeckContext = () => useContext(DeckContext);\n  \n\nexport const DeckContextProvider = ({children}) => {\n\n    const [decks, setDecks] = useState({})\n\n    useEffect(()=>{\n        console.log(\"::::::::::: ASYNC SETITEM ::::::::::::\")\n\n        if(decks !== initialState){\n            AsyncStorage.setItem(MOBILE_FLASHCARDS_DECK_KEY, JSON.stringify(decks))\n        }\n    },[decks])\n\n    useEffect(()=>{\n        console.log(\"::::::::::: ASYNC STORAGE IS RUNNING ::::::::::::\")\n        AsyncStorage.getItem(MOBILE_FLASHCARDS_DECK_KEY)\n        .then(res=>JSON.parse(res))\n        .then(data=>{\n            console.log(data)\n            if(data === null){\n                setDecks(initialState)\n            }else{\n                setDecks(data)\n            }\n        })\n    },[])\n\n    function saveDeckTitleContext(deck){\n        setDecks({...decks, ...deck })\n    }\n\n    function addCardToDeckContext(title,question){\n        setDecks({\n            ...decks,\n            [title]:{\n                ...decks[title],\n                questions:[\n                    ...decks[title].questions,\n                    question\n                ]\n            }\n        })\n    }\n \n    return (\n        <DeckContext.Provider \n            value={{\n                decks,\n                saveDeckTitleContext,\n                addCardToDeckContext\n            }}\n        >\n            {children}\n        </DeckContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}
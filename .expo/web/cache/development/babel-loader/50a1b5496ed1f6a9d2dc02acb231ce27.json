{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/timiking/Apps/mobile-flashcards/screens/DeckListView.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { getDecks } from \"../utils/helpers\";\n\nvar DeckListView = function DeckListView() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      decks = _useState2[0],\n      setDecks = _useState2[1];\n\n  getAllDecks = function getAllDecks() {\n    var allDecks;\n    return _regeneratorRuntime.async(function getAllDecks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getDecks());\n\n          case 2:\n            allDecks = _context.sent;\n            cosnole.log(allDecks);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getAllDecks();\n  }, [decks]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, Object.keys(decks).legnth > 0 && Object.keys(decks).map(function (deck) {\n    return React.createElement(Text, {\n      styles: styles.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 49\n      }\n    }, deck);\n  }));\n};\n\nexport default DeckListView;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: \"red\"\n  }\n});","map":{"version":3,"sources":["/home/timiking/Apps/mobile-flashcards/screens/DeckListView.js"],"names":["React","useEffect","useState","getDecks","DeckListView","decks","setDecks","getAllDecks","allDecks","cosnole","log","Object","keys","legnth","map","deck","styles","text","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;;;;AAEA,SAAQC,QAAR;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvB,kBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AAEAC,EAAAA,WAAW,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACaJ,QAAQ,EADrB;;AAAA;AACJK,YAAAA,QADI;AAEVC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAKAP,EAAAA,SAAS,CAAC,YAAI;AAEZM,IAAAA,WAAW;AAEZ,GAJQ,EAIP,CAACF,KAAD,CAJO,CAAT;AAMA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQM,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBQ,MAAnB,GAA4B,CAA5B,IACGF,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmBS,GAAnB,CAAuB,UAAAC,IAAI;AAAA,WAAE,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAEC,MAAM,CAACC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,IAA5B,CAAF;AAAA,GAA3B,CAHX,CADJ;AAQH,CAvBD;;AAyBA,eAAeX,YAAf;AAGA,IAAMY,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADkB;AAO7BP,EAAAA,IAAI,EAAC;AACDQ,IAAAA,KAAK,EAAC;AADL;AAPwB,CAAlB,CAAf","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport { Text, View, StyleSheet} from 'react-native';\nimport {getDecks} from '../utils/helpers';\n\n\nconst DeckListView = () => {\n\n    const [decks, setDecks] = useState({})\n\n    getAllDecks = async () => {\n        const allDecks = await getDecks();\n        cosnole.log(allDecks)\n    }\n\n    useEffect(()=>{\n        \n      getAllDecks()\n        \n    },[decks])\n\n    return (\n        <View>\n            {\n                Object.keys(decks).legnth > 0 \n                && Object.keys(decks).map(deck=><Text styles={styles.text}>{deck}</Text>)\n            }\n        </View>\n    );\n}\n\nexport default DeckListView;\n\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    text:{\n        color:\"red\"\n    }\n});"]},"metadata":{},"sourceType":"module"}